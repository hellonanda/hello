on: 
 push:

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: checkout 
        uses: actions/checkout@v4
      - name: Create file
        id: main
        run: |
         mkdir -p test/1/2/3/
         echo "Hello, World! ewrw-${{ github.run_id }}" > ./test/1/2/3/example.txt
         wget https://get.jenkins.io/war-stable/2.479.1/jenkins.war
         cp Dockerfile swapfile
         cat hello.txt
      
      - name: Check if previous step failed
        id: check_failure
        if: always()
        run: |
          if [ "${{ steps.main.conclusion }}" == "failure" ]; then
            echo "Step failed, setting failure_flag to true"
            echo "failure_flag=true" >> $GITHUB_ENV
          else
            echo "failure_flag=false" >> $GITHUB_ENV
          fi

      - name: Cache file if Create file step failed
        if: ${{ always() && env.failure_flag == 'true' }}
        uses: actions/cache@v3
        with:
          retention-days: 1
          path: |
            ./test/1/2/3/example.txt
            jenkins.war
            swapfile
          key: my-cache-key-${{ github.run_id }}
          # Optionally set restore-keys for fallback if needed

  job2:
    needs: job1
    if: ${{ needs.job1.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout 
        uses: actions/checkout@v4
      - name: Restore cached file
        uses: actions/cache@v3
        with:
          path: | 
             ./test/1/2/3/example.txt
             jenkins.war
             swapfile
          key: my-cache-key-${{ github.run_id }}
      - name: Access shared file
        env:
         GH_TOKEN: ${{ github.token }}
        run: |
          ls -al 
          cat ./test/1/2/3/example.txt
          cat swapfile
          gh cache delete my-cache-key-${{ github.run_id }}

