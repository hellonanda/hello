on: 
  push:

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      value: ${{ steps.check_failure.outputs.file_content }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Create file
        id: main
        run: |
          mkdir -p test/1/2/3/
          echo "{sessionToken}: {abcd123}" > ./test/1/2/3/example.txt
          wget https://get.jenkins.io/war-stable/2.479.1/jenkins.war
          cp Dockerfile swapfile
          
          cat hello.txt

      - name: Check if previous step failed
        id: check_failure
        if: ${{ always() && steps.main.conclusion == 'failure' }}
        run: |
          value=$(cat ./test/1/2/3/example.txt)
          echo "file_content=$value" >> $GITHUB_ENV  # Save to environment file for job output
          echo "file_content=$value" >> $GITHUB_OUTPUT  # Set as output for next job
          
  job2:
    needs: job1
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Access shared file
        run: |
          ls -al
          echo "Value from job1: ${{ needs.job1.outputs.value }}"  # Correctly referencing job1 output
