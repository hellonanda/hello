name: tools
# env:
#   versionone: '3.7'
#   versiontwo: '3.8'
#   versionthree: '3.9'
#   versionten: '3.10'
on:
 workflow_dispatch:
   # inputs:
   #   version:
   #    type: string
   #    description: select py version
      
    
   #   environment:
   #      type: dev
permissions:
  issues: write
  contents: read
  pages: write 
jobs:
 tools:
  name: tools
  runs-on: ubuntu-latest
  env:  
   GH_TOKEN: ${{ github.token }}
  steps:
   - name: code checkout
     uses: actions/checkout@v3

   - run : |
      # ip | a
      hostname -I
      sleep 30
      # curl ifconfig.me
      # cat /etc/hosts

      # gh api -H "Accept: application/vnd.github+json"  -H "X-GitHub-Api-Version: 2022-11-28" /meta
     
   - name: get runner ip address
     id: ip
     uses: haythem/public-ip@v1.2

   - run: echo ${{ steps.ip.outputs.ipv4 }}
 run-ip:
  name: ip 
  runs-on: ubuntu-latest
  needs: tools
  steps:
   - run: |
      curl ifconfig.me 
      echo " hostname "
      hostname -I
      cat /etc/hosts
   

   # - name: Run latest-tag
   #   uses: EndBug/latest-tag@latest
   #   with:
   #  # You can change the name of the tag or branch with this input.
   #  # Default: 'latest'
   #    ref: tag1

   #  # If a description is provided, the action will use it to create an annotated tag. If none is given, the action will create a lightweight tag.
   #  # Default: ''
   #    description: Description for the tag tag1 from ${{ github.ref }}
   #    force-branch: true
   # - name: Set up Python 
   #   uses: actions/setup-python@v4
   #   with:
   #      python-version: ${{ github.event.inputs.version }}

   # - uses: avakar/tag-and-release@v1
   #   with:
   #      tag_name: ${{  github.ref }}
   #      release_name:  ${{  github.ref }}
   #      body: Created release on {{ github.ref }} 
   #   env:
   #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
   # - name: Create Release
   #   id: create_release
   #   uses: actions/create-release@latest
   #   env:
   #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
   #   with:
   #    tag_name: ${{ github.ref }}
   #    release_name: Release ${{ github.ref }}
   #    body: |
   #      Changes in this Release
   #      - First Change
   #      - Second Change
   #    draft: false
   #    prerelease: false
#    - name: install dependencies
#      run: pip install requirements.txt
   # - uses: trstringer/manual-approval@v1
   #   with:
   #    secret: ${{ github.TOKEN }}
   #    approvers: MirzaJunaid96
   #    minimum-approvals: 1
   #    issue-title: "Deploying v1.3.5 to prod from staging"
   #    issue-body: "Please approve or deny the deployment of version v1.3.5."
   # - name: run simple pyhton scri
   #   run: python --version

      
  
